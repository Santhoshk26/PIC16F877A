

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Mon Apr 25 16:28:57 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.36
    14                           ; Generated 28/01/2022 GMT
    15                           ; 
    16                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0094                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  010F                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108  0000                     	;# 
   109  0001                     	;# 
   110  0002                     	;# 
   111  0003                     	;# 
   112  0004                     	;# 
   113  0005                     	;# 
   114  0006                     	;# 
   115  0007                     	;# 
   116  0008                     	;# 
   117  0009                     	;# 
   118  000A                     	;# 
   119  000B                     	;# 
   120  000C                     	;# 
   121  000D                     	;# 
   122  000E                     	;# 
   123  000E                     	;# 
   124  000F                     	;# 
   125  0010                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0014                     	;# 
   130  0015                     	;# 
   131  0015                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  0019                     	;# 
   136  001A                     	;# 
   137  001B                     	;# 
   138  001B                     	;# 
   139  001C                     	;# 
   140  001D                     	;# 
   141  001E                     	;# 
   142  001F                     	;# 
   143  0081                     	;# 
   144  0085                     	;# 
   145  0086                     	;# 
   146  0087                     	;# 
   147  0088                     	;# 
   148  0089                     	;# 
   149  008C                     	;# 
   150  008D                     	;# 
   151  008E                     	;# 
   152  0091                     	;# 
   153  0092                     	;# 
   154  0093                     	;# 
   155  0094                     	;# 
   156  0098                     	;# 
   157  0099                     	;# 
   158  009C                     	;# 
   159  009D                     	;# 
   160  009E                     	;# 
   161  009F                     	;# 
   162  010C                     	;# 
   163  010D                     	;# 
   164  010E                     	;# 
   165  010F                     	;# 
   166  018C                     	;# 
   167  018D                     	;# 
   168                           
   169                           	psect	idataBANK0
   170  079D                     __pidataBANK0:
   171                           
   172                           ;initializer for main@F879
   173  079D  343F               	retlw	63
   174  079E  3406               	retlw	6
   175  079F  345B               	retlw	91
   176  07A0  344F               	retlw	79
   177  07A1  3466               	retlw	102
   178  07A2  346D               	retlw	109
   179  07A3  347D               	retlw	125
   180  07A4  3407               	retlw	7
   181  07A5  347F               	retlw	127
   182  07A6  3467               	retlw	103
   183  0007                     _PORTC	set	7
   184  0006                     _PORTB	set	6
   185  0087                     _TRISC	set	135
   186  0086                     _TRISB	set	134
   187                           
   188                           	psect	cinit
   189  07EE                     start_initialization:	
   190                           ; #config settings
   191                           
   192  07EE                     __initialization:
   193                           
   194                           ; Initialize objects allocated to BANK0
   195  07EE  1383               	bcf	3,7	;select IRP bank0
   196  07EF  3035               	movlw	low (__pdataBANK0+10)
   197  07F0  00FD               	movwf	btemp+-1
   198  07F1  3007               	movlw	high __pidataBANK0
   199  07F2  00FE               	movwf	btemp
   200  07F3  309D               	movlw	low __pidataBANK0
   201  07F4  00FF               	movwf	btemp+1
   202  07F5  302B               	movlw	low __pdataBANK0
   203  07F6  0084               	movwf	4
   204  07F7  120A  118A  27AB  120A  118A  	fcall	init_ram0
   205  07FC                     end_of_initialization:	
   206                           ;End of C runtime variable initialization code
   207                           
   208  07FC                     __end_of__initialization:
   209  07FC  0183               	clrf	3
   210  07FD  120A  118A  2FBA   	ljmp	_main	;jump to C main() function
   211                           
   212                           	psect	dataBANK0
   213  002B                     __pdataBANK0:
   214  002B                     main@F879:
   215  002B                     	ds	10
   216                           
   217                           	psect	inittext
   218  07A7                     init_fetch0:	
   219                           ;	Called with low address in FSR and high address in W
   220                           
   221  07A7  087E               	movf	btemp,w
   222  07A8  008A               	movwf	10
   223  07A9  087F               	movf	btemp+1,w
   224  07AA  0082               	movwf	2
   225  07AB                     init_ram0:	
   226                           ;Called with:
   227                           ;	high address of idata address in btemp 
   228                           ;	low address of idata address in btemp+1 
   229                           ;	low address of data in FSR
   230                           ;	high address + 1 of data in btemp-1
   231                           
   232  07AB  120A  118A  27A7  120A  118A  	fcall	init_fetch0
   233  07B0  0080               	movwf	0
   234  07B1  0A84               	incf	4,f
   235  07B2  0804               	movf	4,w
   236  07B3  067D               	xorwf	btemp+-1,w
   237  07B4  1903               	btfsc	3,2
   238  07B5  3400               	retlw	0
   239  07B6  0AFF               	incf	btemp+1,f
   240  07B7  1903               	btfsc	3,2
   241  07B8  0AFE               	incf	btemp,f
   242  07B9  2FAB               	goto	init_ram0
   243                           
   244                           	psect	cstackCOMMON
   245  0070                     __pcstackCOMMON:
   246  0070                     ?_main:
   247  0070                     ??_main:	
   248                           ; 1 bytes @ 0x0
   249                           
   250                           
   251                           ; 1 bytes @ 0x0
   252  0070                     	ds	4
   253                           
   254                           	psect	cstackBANK0
   255  0020                     __pcstackBANK0:
   256  0020                     main@arr:
   257                           
   258                           ; 10 bytes @ 0x0
   259  0020                     	ds	10
   260  002A                     main@i:
   261                           
   262                           ; 1 bytes @ 0xA
   263  002A                     	ds	1
   264                           
   265                           	psect	maintext
   266  07BA                     __pmaintext:	
   267 ;;
   268 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   269 ;;
   270 ;; *************** function _main *****************
   271 ;; Defined at:
   272 ;;		line 4 in file "nbproject/2switch.c"
   273 ;; Parameters:    Size  Location     Type
   274 ;;		None
   275 ;; Auto vars:     Size  Location     Type
   276 ;;  arr            10    0[BANK0 ] unsigned char [10]
   277 ;;  i               1   10[BANK0 ] unsigned char 
   278 ;; Return value:  Size  Location     Type
   279 ;;                  1    wreg      void 
   280 ;; Registers used:
   281 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   282 ;; Tracked objects:
   283 ;;		On entry : B00/0
   284 ;;		On exit  : 0/0
   285 ;;		Unchanged: 0/0
   286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   287 ;;      Params:         0       0       0       0       0
   288 ;;      Locals:         0      11       0       0       0
   289 ;;      Temps:          4       0       0       0       0
   290 ;;      Totals:         4      11       0       0       0
   291 ;;Total ram usage:       15 bytes
   292 ;; This function calls:
   293 ;;		Nothing
   294 ;; This function is called by:
   295 ;;		Startup code after reset
   296 ;; This function uses a non-reentrant model
   297 ;;
   298                           
   299  07BA                     _main:	
   300                           ;psect for function _main
   301                           
   302  07BA                     l630:	
   303                           ;incstack = 0
   304                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0]
   305                           
   306                           
   307                           ;nbproject/2switch.c: 6:     TRISB=0X00;
   308  07BA  1683               	bsf	3,5	;RP0=1, select bank1
   309  07BB  1303               	bcf	3,6	;RP1=0, select bank1
   310  07BC  0186               	clrf	6	;volatile
   311  07BD                     l632:
   312                           
   313                           ;nbproject/2switch.c: 8:     TRISC=0X01;
   314  07BD  3001               	movlw	1
   315  07BE  0087               	movwf	7	;volatile
   316  07BF                     l634:
   317                           
   318                           ;nbproject/2switch.c: 9:     PORTB=0X00;
   319  07BF  1283               	bcf	3,5	;RP0=0, select bank0
   320  07C0  1303               	bcf	3,6	;RP1=0, select bank0
   321  07C1  0186               	clrf	6	;volatile
   322  07C2                     l636:
   323                           
   324                           ;nbproject/2switch.c: 12:     unsigned char arr[10]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,
      +                          0x07,0x7f,0x67};
   325  07C2  3020               	movlw	main@arr& (0+255)
   326  07C3  0084               	movwf	4
   327  07C4  302B               	movlw	low main@F879
   328  07C5  00F0               	movwf	??_main
   329  07C6  0804               	movf	4,w
   330  07C7  00F1               	movwf	??_main+1
   331  07C8  300A               	movlw	10
   332  07C9  00F2               	movwf	??_main+2
   333  07CA                     u40:
   334  07CA  0870               	movf	??_main,w
   335  07CB  0084               	movwf	4
   336  07CC  1383               	bcf	3,7	;select IRP bank0
   337  07CD  0800               	movf	0,w
   338  07CE  00F3               	movwf	??_main+3
   339  07CF  0AF0               	incf	??_main,f
   340  07D0  0871               	movf	??_main+1,w
   341  07D1  0084               	movwf	4
   342  07D2  0873               	movf	??_main+3,w
   343  07D3  0080               	movwf	0
   344  07D4  0AF1               	incf	??_main+1,f
   345  07D5  0BF2               	decfsz	??_main+2,f
   346  07D6  2FCA               	goto	u40
   347  07D7                     l638:
   348                           
   349                           ;nbproject/2switch.c: 13:     unsigned char i=0;
   350  07D7  01AA               	clrf	main@i
   351  07D8                     l640:
   352                           
   353                           ;nbproject/2switch.c: 16:     {;nbproject/2switch.c: 18:         if(PORTC & (1<<0))
   354  07D8  1C07               	btfss	7,0	;volatile
   355  07D9  2FDB               	goto	u51
   356  07DA  2FDC               	goto	u50
   357  07DB                     u51:
   358  07DB  2FD8               	goto	l640
   359  07DC                     u50:
   360  07DC                     l642:
   361                           
   362                           ;nbproject/2switch.c: 19:         {;nbproject/2switch.c: 20:             PORTB=arr[i];
   363  07DC  082A               	movf	main@i,w
   364  07DD  3E20               	addlw	(low (main@arr| 0))& (0+255)
   365  07DE  0084               	movwf	4
   366  07DF  1383               	bcf	3,7	;select IRP bank0
   367  07E0  0800               	movf	0,w
   368  07E1  0086               	movwf	6	;volatile
   369  07E2                     l17:	
   370                           ;nbproject/2switch.c: 22:             while(PORTC & (1<<0));
   371                           
   372  07E2  1807               	btfsc	7,0	;volatile
   373  07E3  2FE5               	goto	u61
   374  07E4  2FE6               	goto	u60
   375  07E5                     u61:
   376  07E5  2FE2               	goto	l17
   377  07E6                     u60:
   378  07E6                     l644:
   379                           
   380                           ;nbproject/2switch.c: 24:             i++;
   381  07E6  3001               	movlw	1
   382  07E7  00F0               	movwf	??_main
   383  07E8  0870               	movf	??_main,w
   384  07E9  07AA               	addwf	main@i,f
   385  07EA  2FD8               	goto	l640
   386  07EB  120A  118A  2800   	ljmp	start
   387  07EE                     __end_of_main:
   388  007E                     btemp	set	126	;btemp
   389  007E                     wtemp0	set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       4
    BANK0            80     11      21
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                15    15      0      48
                                              0 COMMON     4     4      0
                                              0 BANK0     11    11      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      B      15       5       26.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      4       4       1       28.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      19      12        0.0%
ABS                  0      0      19       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Mon Apr 25 16:28:57 2022

                      pc 0002                       l17 07E2                       u40 07CA  
                     u50 07DC                       u51 07DB                       u60 07E6  
                     u61 07E5                       fsr 0004                      l630 07BA  
                    l640 07D8                      l632 07BD                      l642 07DC  
                    l634 07BF                      l644 07E6                      l636 07C2  
                    l638 07D7                      fsr0 0004                      indf 0000  
                   _main 07BA                     btemp 007E                     start 0000  
                  ?_main 0070                    _PORTB 0006                    _PORTC 0007  
                  _TRISB 0086                    _TRISC 0087                    main@i 002A  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07EE             __end_of_main 07EE                   ??_main 0070  
__end_of__initialization 07FC           __pcstackCOMMON 0070             __pidataBANK0 079D  
             __pmaintext 07BA                  main@arr 0020     end_of_initialization 07FC  
    start_initialization 07EE               init_fetch0 07A7              __pdataBANK0 002B  
              ___latbits 0002            __pcstackBANK0 0020                 main@F879 002B  
               init_ram0 07AB  
